enum NftState {
  NONE
  CLOSED_PORTAL
  OPENED_PORTAL
  AAVEGOTCHI
  AAVEGOTCHI_LAND
  AVATAR
  WAVATAR
  SPACESHIP
  WSPACESHIP
}

enum NftType {
  AAVEGOTCHI
  AAVEGOTCHI_LAND
  NOVAAVATAR
  WNOVAAVATAR
  NOVASPACESHIP
  WNOVASPACESHIP
  TRAVELER
  WTRAVELER
  COMETHSPACESHIP
}

type Nft @entity(immutable: false) {
  id: ID!
  address: String!
  state: NftState!
  type: NftType!
  tokenId: BigInt!
  platform: String!

  currentOwner: Account!
  previousOwner: Account!
  originalOwner: Account!

  currentRental: Rental
  rentalHistory: [Rental!]! @derivedFrom(field: "nft")

  currentRentalOffer: RentalOffer
  rentalOfferHistory: [RentalOffer!]
}

type Account @entity(immutable: false) {
  id: ID!
  nfts: [Nft!]! @derivedFrom(field: "originalOwner")
  borrowings: [Rental!]! @derivedFrom(field: "borrower")
  lendings: [Rental!]! @derivedFrom(field: "lender")
}

type Rental @entity(immutable: false) {
  id: ID!
  nft: Nft!
  borrower: Account!
  lender: Account!
  startDate: BigInt!
  startedTxHash: String!
  expirationDate: BigInt
  endedAt: BigInt
  endRentalHash: String
  rentalOffer: RentalOffer
}

type RentalOffer @entity(immutable: false) {
  id: ID!
  nfts: [Nft!]!
  lender: Account!
  createdAt: BigInt!
  cancelledAt: BigInt
  creationTxHash: String!
  cancellationTxHash: String
  executionTxHash: String
  duration: [BigInt!]
  rental: Rental @derivedFrom(field: "rentalOffer")
  feeToken: String
  feeAmount: BigInt
  expirationDate: BigInt!
  profitShareTokens: [String!]
  profitShareSplit: [BigInt!]
}

type ClaimedToken @entity {
  id: ID!
  rental: Rental!
  token: String!
  amount: BigInt!
}

type Control @entity {
  id: ID!
  lastNftTransferred: Nft!
}

type Approval @entity {
  id: ID!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
}

type ApprovalForAll @entity {
  id: ID!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
}

type OwnershipTransferred @entity {
  id: ID!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
}

type ContractTransfer @entity {
  id: ID!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
}
